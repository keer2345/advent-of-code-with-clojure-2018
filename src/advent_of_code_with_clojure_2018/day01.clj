(ns advent-of-code-with-clojure-2018.day01
  (:require [clojure.string :as str]))

;; https://adventofcode.com/2018/day/1

(def input (slurp "./resources/input/day01.txt"))

(def parsed-input
  (-> input
      (str/split #"\n")
      (->> (map #(Integer/parseInt %)))))

(def result (reduce + parsed-input))

(reductions + parsed-input)
;; => (4 -14 -6 10 -3 -13 -24 -42 -33 -48 -29 -15 -28 -21 -31 -51 -32 -43 -63 -76 -70 -58 -39 -20 -7 -16 2 14 11 28 43 50 31 18 38 46 32 30 48 34 35 26 8 21 23 25 22 24 29 37 54 65 74 68 52 55 70 56 67 72 89 71 81 66 62 44 27 19 1 -12 -4 5 -8 -9 -19 -1 -5 7 17 12 15 6 -10 -11 -2 20 40 39 36 42 51 61 49 57 73 92 82 94 97 105 104 90 100 98 88 80 91 102 112 93 106 120 119 111 115 127 113 103 85 69 75 59 63 60 76 58 78 101 114 116 99 123 134 137 138 124 108 125 117 107 128 129 141 149 159 167 162 175 191 198 188 193 200 213 215 220 222 237 240 247 234 224 219 204 190 178 183 171 186 205 217 236 223 207 194 197 189 184 168 160 176 182 196 192 210 218 230 231 228 242 227 221 206 211 212 214 225 248 265 267 275 274 258 256 268 285 280 266 249 260 259 245 264 263 257 271 278 277 290 289 270 283 292 273 293 299 308 322 332 336 328 327 320 315 311 329 323 307 304 295 312 333 319 326 334 341 325 305 287 291 310 313 316 317 335 339 342 338 331 321 314 297 309 301 282 276 261 272 284 300 296 279 298 294 286 281 303 288 269 250 253 241 239 244 232 216 238 254 255 233 209 208 202 187 161 166 158 139 157 147 144 164 165 179 199 203 181 169 173 180 172 155 153 154 174 195 201 235 246 229 252 243 226 251 262 353 361 363 344 340 357 360 366 377 378 384 373 375 382 392 406 410 393 402 396 386 398 417 414 426 415 403 412 419 427 423 434 445 446 444 432 442 428 448 437 430 449 457 459 463 467 473 480 488 489 493 499 496 487 475 464 447 431 436 435 452 468 460 469 482 497 494 500 519 516 531 512 498 486 481 456 439 421 438 443 433 454 472 478 492 476 485 503 509 515 513 528 507 508 527 526 523 530 556 535 536 504 501 517 506 484 471 470 455 474 479 466 451 462 429 440 422 425 424 416 418 407 390 397 388 369 376 394 389 399 380 391 383 387 400 385 395 379 368 362 352 347 348 367 372 356 358 364 351 355 349 359 350 330 318 306 343 324 337 302 365 354 346 371 370 381 408 405 411 401 413 441 420 345 374 409 450 465 453 461 458 562 569 598 594 617 637 648 663 679 685 699 716 704 684 695 705 701 698 686 688 693 689 675 674 683 671 640 639 632 630 606 636 586 566 600 491 518 404 703 709 696 730 723 738 649 662 78775 78763 78774 78781 78767 78762 78744 78741 78738 78734 78742 78743 78751 78756 78745 78764 78747 78733 78715 78724 78718 78729 78719 78737 78748 78766 78760 78755 78769 78773 78759 78754 78752 78770 78785 78783 78800 78808 78816 78813 78817 78821 78830 78840 78852 78858 78844 78857 78863 78873 78865 78846 78859 78856 78871 78888 78877 78895 78890 78906 78900 78892 78893 78902 78916 78910 78894 78878 78884 78896 78887 78905 78915 78920 78918 78903 78908 78913 78911 78923 78926 78944 78949 78951 78945 78948 78943 78939 78940 78931 78935 78917 78929 78914 78921 78925 78933 78922 78938 78950 78965 78984 78972 78959 78957 78941 78934 78952 78946 78937 78930 78912 78909 78899 78901 78883 78869 78881 78874 78882 78889 78904 78885 78880 78868 78849 78842 78825 78843 78835 78815 78827 78814 78799 78788 78780 78793 78801 78811 78824 78836 78833 78851 78861 78848 78864 78876 78862 78850 78832 78839 78841 78853 78855 78866 78854 78860 78847 78834 78812 78803 78822 78823 78826 78819 78809 78798 78807 78795 78794 78802 78806 78810 78792 78771 78791 78772 78789 78784 78765 78779 78804 78796 78786 78782 78776 78787 78797 78805 78828 78837 78818 78831 78875 78879 78898 78897 78919 78942 78954 78964 78982 78992 79009 78995 78978 78975 78966 78962 78947 78960 78979 78997 79002 78994 78996 78981 78991 79007 79015 79005 78993 79001 79006 78987 79008 79019 79004 78986 78976 78988 78980 78970 78969 78958 78968 78973 78989 79000 79022 79018 79036 79035 79037 79057 79074 79091 79073 79060 79053 79072 79065 79046 79054 79068 79058 79063 79045 79051 79032 79028 79023 79030 79025 79021 79040 79038 79056 79076 79062 79043 79041 79050 79033 79047 79052 79064 79055 79070 79080 79088 79104 79085 79087 79077 79071 79069 79089 79100 79105 79090 79092 79083 79094 79109 79118 79133 79123 79119 79130 79138 79134 79137 79129 79145 79164 79175 79165 79161 79166 79149 79136 79155 79172 79176 79186 79188 79195 79196 79191 79184 79167 79152 79162 79169 79173 79178 79194 79193 79190 79206 79197 79179 79183 79177 79174 79189 79205 79199 79198 79209 79225 79232 79243 79224 79227 79241 79255 79249 79257 79247 79245 79234 79252 79258 79269 79281 79278 79289 79270 79259 79246 79231 79229 79222 79213 79201 79218 79208 79192 79204 79202 79221 79223 79217 79216 79212 79207 79230 79238 79219 79237 79220 79240 79239 79236 79254 79276 79265 79262 79260 79275 79273 79256 79274 79292 79302 79306 79288 79285 79263 79248 79228 79211 79203 79214 79215 79200 79210 79233 79242 79253 79251 79267 79244 79261 79250 79280 79283 79284 79279 79303 79293 79321 79314 79331 79310 79266 79235 79299 79311 79343 79373 79382 79398 79391 79423 79489 79477 79481 79506 79485 79520 79508 79514 79524 79538 79536 79551 79565 79570 79573 79584 79587 79577 79580 79563 79567 79552 79579 79592 79620 79601 79582 79602 79619 79628 79651 79661 79684 79666 553)

;; 找出第一个重复的数字
(reduce
 ;; (fn [seen-values new-value]
 ;;   (if (seen-values new-value)
 ;;     (reduced new-value)
 ;;     (conj seen-values new-value)))
 #(if (%1 %2) (reduced %2) (conj %1 %2))
 #{}
 parsed-input)
;; => -18


(reduce
 #(if (%1 %2) (reduced %2) (conj %1 %2))
 #{0}
 (reductions + parsed-input))
;; => #{0 78805 78763 78869 453 487 637 519 79266 78915 357 716 78742 275 78801 530 389 79423 79166 586 79025 410 79051 78786 78794 79587 433 79661 451 291 443 78889 249 299 78782 -12 78989 78946 287 65 78744 -24 70 78797 218 648 78784 78724 62 74 475 497 79069 78948 78914 164 79053 282 78934 79477 78816 273 79174 186 79173 430 78913 370 -4 78882 78762 78813 -32 233 78873 298 188 79176 240 78803 78754 79055 311 79256 79130 128 78814 399 79267 78806 377 78959 79104 468 259 210 229 153 213 79074 343 78978 78881 472 7 78890 59 78976 -28 473 -70 78912 491 154 20 224 355 79489 466 72 454 78864 78911 463 78826 79288 58 79224 78734 79651 205 60 79579 78972 459 175 78857 78973 322 78964 79382 78819 662 27 352 78981 493 78975 416 1 69 78992 101 24 79247 78991 78904 102 79169 79580 78859 78862 385 397 79302 79222 78935 354 79225 360 55 79563 78982 688 269 78861 448 527 206 79293 79035 78766 79485 165 79205 79008 79524 387 -76 683 79245 85 78849 225 79100 297 39 79070 79190 79123 79175 78987 274 78795 78738 88 217 46 -20 -2 508 149 415 239 478 78756 157 345 79246 79201 -51 300 79136 78920 79178 4 204 79260 470 106 197 405 78947 79019 518 232 260 267 119 78894 319 222 79214 78791 79094 293 450 329 144 79299 504 78885 79046 723 78952 78931 78980 176 471 78747 79052 79321 78751 349 512 79041 78772 192 54 92 79177 221 141 464 307 78892 290 78909 517 78921 361 264 137 356 78888 327 79060 78898 234 104 79628 353 -1 78834 15 79217 -8 79191 48 79269 242 78844 50 78877 79092 78793 251 394 78841 116 79062 75 437 516 79197 78937 79198 79193 159 79506 79134 78970 79056 78719 709 99 79258 79083 479 630 281 -42 78780 402 78770 79186 429 309 458 21 388 79033 79209 31 113 32 78823 407 398 78901 139 79254 506 79206 396 460 78812 78783 174 -6 79284 79054 78743 331 78733 363 79149 284 208 305 79223 79195 78896 182 256 79552 485 214 78941 79161 193 685 79398 78997 442 78832 241 314 226 79000 235 78900 79037 78943 420 418 262 79565 263 304 401 40 79619 129 600 79090 78871 467 79184 445 317 78966 79331 78822 294 91 364 79208 515 412 79164 553 78951 78745 341 117 79073 78923 79244 79219 -19 79311 78950 78944 78842 79068 523 -21 172 79261 78940 79249 108 358 308 78903 649 531 223 419 365 181 417 79551 78949 278 56 79233 79536 22 79231 78775 380 257 338 500 79043 78831 78876 168 79091 -3 496 79241 78929 79007 78737 79280 78939 78887 78817 347 501 78926 90 237 78856 292 79129 79279 216 191 498 78988 79189 375 367 178 640 247 328 391 167 78799 36 79391 474 187 79109 528 78854 78825 79218 79239 79257 376 195 316 78938 428 303 78765 671 78821 368 79152 310 366 78908 313 384 238 78827 79179 196 162 79050 393 184 78933 219 79088 461 78835 89 100 426 351 243 78773 -43 78884 78764 78858 43 231 61 78968 598 79203 413 29 79006 369 348 79023 693 79221 44 258 79004 250 674 79666 78848 301 78833 78810 424 78868 93 6 684 -31 79040 408 78808 79289 79274 -14 111 79314 78996 689 28 456 374 79278 78811 79192 411 134 78880 78760 79137 465 334 79250 78741 79058 323 78809 189 280 198 79240 155 79243 295 78847 78850 248 -48 79213 78960 78851 285 507 227 476 494 220 103 51 25 261 78866 78755 201 79230 489 166 447 34 252 79255 325 78883 79276 78767 594 436 535 78945 79310 79204 -15 228 306 78916 78789 125 276 79232 340 78843 482 17 312 606 79002 286 279 536 78925 663 12 79038 79009 440 332 330 382 78792 435 342 703 78930 79273 79215 695 2 66 484 439 236 556 373 359 79212 79251 371 444 78752 107 78897 79237 23 230 78893 79220 78779 -7 526 -63 180 79047 78800 79202 79165 158 79567 78802 79238 79063 79119 350 35 79077 78969 127 -16 675 383 78917 302 701 79253 566 79199 82 78922 79242 76 492 78954 78958 79270 215 97 704 79584 277 19 335 57 202 68 452 200 79577 11 -11 115 79018 79227 339 431 462 337 79620 698 78815 255 503 632 457 79283 78878 427 5 78769 79235 -29 244 78781 79481 289 78839 112 79087 730 699 79080 79570 414 79005 78863 79138 78942 79064 79210 179 78979 78910 78984 344 481 79196 79343 79216 245 79275 378 78718 79573 266 324 78787 78986 79234 78771 78796 78905 79089 446 78729 254 79032 78879 404 78902 617 78776 283 79281 79028 -58 78837 513 79133 705 78919 138 346 14 455 265 79194 449 333 639 569 326 79001 78 79520 78818 562 78840 79601 -9 79229 315 -10 480 26 123 78824 203 392 79015 321 79263 441 78798 268 320 78846 288 381 78774 79105 81 78860 79207 120 79262 211 79071 38 79228 173 79259 421 636 98 79030 79514 422 79021 423 409 124 79373 -33 79076 78748 171 78918 169 79072 79285 679 79036 160 30 400 78874 696 79236 79200 78836 78830 738 509 207 434 194 78804 73 486 78828 79167 336 78994 10 272 499 488 386 78957 270 271 18 79292 79248 395 403 469 79265 105 79684 52 78855 114 78962 253 -13 79592 79045 209 147 79508 79306 78865 425 67 296 318 161 79582 78995 372 79303 78993 406 78807 78965 438 79085 -39 71 79538 79065 42 78899 80 78785 -5 78759 79188 79211 78715 79057 79172 199 79145 78853 79022 37 183 79118 432 379 63 212 94 79252 79602 78906 362 8 686 79155 246 190 78788 78895 79162 78852 79183 78875 49 390}

(take 6
      (reductions
       #(if (%1 %2) (reduced %2) (conj %1 %2))
       #{0}
       (reductions + parsed-input)))
;; => (#{0} #{0 4} #{0 4 -14} #{0 4 -6 -14} #{0 4 -6 -14 10} #{0 4 -6 -3 -14 10})

(reduce #(if (contains? %1 %2) (reduced %2) (conj %1 %2))
        #{0}
        (reductions + (cycle parsed-input)))
;; => 78724
